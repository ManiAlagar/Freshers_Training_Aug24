@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model IEnumerable<BookstoreMVC.Models.Book>


 @if (TempData["role"].ToString() == "2" || TempData["role"].ToString() == "3"){
<p>
        <h3>Books</h3>
    <a asp-action="Display" asp-controller="Book" class="  btn btn-primary">Create New</a>
</p>
 }

@if (TempData["role"].ToString() == "1")
{
    <p>
        <h3> Books</h3>
       
    </p>
}

<table class="table">
    <thead>
        <tr>
           
            @if (TempData["role"].ToString() == "1")
            {
                <th>Title</th>
                <th>Author</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Actions</th>
            }
            @if (TempData["role"].ToString() == "3"){
                <th>Title</th>
                <th>Author</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Publish</th>
                <th>Actions</th>
            }
            @if (TempData["role"].ToString() == "2")
            {
                <th>Title</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        
        @foreach (var item in Model)
        {

            @if (TempData["role"].ToString() == "1" )
                    {
                        <tr>
                        <td>@item.Title</td>
                        <td>@item.Username</td>
                        <td>@item.Description</td>
                        <td>@item.Price</td>
                    <td>
                        @if (@item.Stock > 1)
                        {
                        @item.Stock
                        }
                        @if (@item.Stock < 1)
                        {
                        <span>Out of stock</span>
                        }
                    </td>
                   
                       <td>
                        @if (@item.isAddedToCart == true || ((@item.isAddedToCart == true || @item.isAddedToCart == false) && item.Stock < 1))
                        {
                       
                            <a id="addtocart" class="btn-sm btn-secondary">Not available</a>
                        }

                        @if (@item.isAddedToCart == false && item.Stock > 1)
                        {
                       
                            <a id="addtocart" onclick="addToCartFunction('@item.BookId');" class="btn-sm btn-info">Add to cart</a>
                       
                        }
                       </td>
                        </tr>
                    }
                    @if (TempData["role"].ToString() == "2")
                    {
                        <tr>
                        <td>@item.Title</td>
                        <td>@item.Description</td>
                        <td>@item.Price</td>
                    <td>
                        @if (@item.Stock > 1)
                        {
                            @item.Stock
                        }
                        @if (@item.Stock < 1)
                        {
                            <span>Out of stock</span>
                        }
                    </td>
                        <td>
                            <a asp-action="Display" asp-controller="Book" asp-route-id="@item.BookId" class=" bi bi-pencil-square btn-sm btn-primary" ></a>
                            <a class="bi bi-trash btn-sm btn-danger" id="delete" onclick="delFunction('@item.BookId');"></a>
                        </td>
                        </tr>
                    }
                    @if (TempData["role"].ToString() == "3")
                    {
                        <tr>
                        <td>@item.Title</td>
                        <td>@item.Username</td>
                        <td>@item.Description</td>
                        <td>@item.Price</td>
                    <td>
                        @if (@item.Stock >= 1)
                        {
                            @item.Stock
                        }
                        @if (@item.Stock < 1)
                        {
                            <span>Out of stock</span>
                        }
                    </td>
                        <td>
                        @if (@item.IsPublish == true)
                        {
                            <a>Published</a>
                        }
                        @if (@item.IsPublish == false)
                        {
                            <a id="publish" class="btn-sm btn-warning " onclick="Publish('@item.BookId');">Publish</a>
                        }
                        
                        </td>
                        <td>

                            <a asp-action="Display" asp-controller="Book" asp-route-id="@item.BookId" class=" bi bi-pencil-square btn-sm btn-primary" ></a>
                            <a class="bi bi-trash btn-sm btn-danger" id="delete" onclick="delFunction('@item.BookId');"></a>
                        </td>
                        </tr>
                    }
              
        }
    </tbody>
</table>
<script type="text/javascript">

     // function fieldValidation(val) {
     //       $('#title').attr('readonly', true);
     // }
           // let publishValue=val;
           //   alert(publishValue);
           //     if(publishValue==true){
           //         document.getElementById('title').readOnly = true;
           //         document.getElementById('desc').readOnly = true;
           //     }
    function delFunction(id) {
        let Id = parseInt(id);
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "/Book/DeleteBook/" + Id,
                    contentType: "application/json;charset=UTF-8",
                    success: function () {
                        setTimeout(myTimeout, 1000);
                    },
                    error: function () {
                        Swal.fire({
                            text: "Error",
                            icon: "danger",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                })

            }
        })
    }

    function myTimeout() {
        location.reload();
    }
    function Publish(id) {
        var bookId = id;
       // alert(bookId);
        $.ajax({
            type: "POST",
            url: "/Book/IsPublish?bookId=" + bookId,
            contentType: "application/json;charset=UTF-8",
            success:function(){
                setTimeout(myTimeout, 1000);
                    Swal.fire({
                            text: "Book Published successfully",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1500
                        });
            }, error: function (error) {
                console.error();
                alert("error", error);
            }
        });
    }

        function addToCartFunction(id) {
            var bookId = id;
            //$("#addtocart").addClass('disabled');
            $.ajax({
                type: "POST",
                url: "/Cart/AddItemToCart?bookId=" + bookId,
                contentType: "application/json;charset=UTF-8",
                success:function(){
                    // alert("success");
                    setTimeout(myTimeout, 1000);
                }, error: function (error) {
                    console.error();
                    alert("error", error);
                }
            });
        }
       

</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}