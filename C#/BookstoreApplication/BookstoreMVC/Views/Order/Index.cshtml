@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@* @{
    "orderId": 64,
      "orderId": 6,
      "ordered_Date": "2024-10-25T00:00:00",
      "statusId": 1,
      "discount": 10,
      "shipping": 100,
      "totalAmount": 3693.7,
      "address": "Madurai"
} *@
@model IEnumerable<BookstoreMVC.Models.Order>
 @if (TempData["role"].ToString() == "3")
{
    <h3>Orders list</h3>
}
@if (TempData["role"].ToString() == "1")
{
    <h3>My Orders</h3>
}

<table class="table">
    <thead>
        <tr>
            @if (TempData["role"].ToString() == "3")
            {
                <th>ID</th>
                <th>Customer Name</th>
                <th>Date</th>
                <th>Address</th> 
                
                <th>Amount</th>
                <th>Action</th>
            }
            @if (TempData["role"].ToString() == "1")
            {
               
                <th>Date</th>
                <th>Address</th>
                <th>Status</th>
                <th>Action</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (TempData["role"].ToString() == "3")
            {
                <tr>
                    <td>@item.OrderId</td>
                    <td>@item.Username</td>
                    <td>@item.Ordered_Date.ToShortDateString()</td>
                    <td>@item.Address</td>
                    
                    <td>@item.TotalAmount</td>
                   <td>
                        <select id="dropdown" onchange="updateStatus(@item.OrderId,this.value)" class="btn-sm btn-warning">
                             <option disabled>Select</option>
                             
                             @foreach (var i in @ViewBag.statuses)
                             {
                                @if (i.Value.ToString()==item.StatusId.ToString())
                                {
                                   <option value="@i.Value" selected id="selectedOpt">@i.Text</option>
                                }
                                else
                                {
                                    @if (item.StatusId == 3 || item.StatusId == 4)
                                    {
                                        <option value="@i.Value" disabled id="nonSelectedOpt">@i.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@i.Value"  id="nonSelectedOpt">@i.Text</option>
                                    }
                                }
                                
                             }
                           
                         </select>
                        <a href="/Order/GetBooksFromOrder/@item.OrderId" class="btn-sm btn-primary ms-2">View Details</a>
                       
                    </td> 
                </tr>
            }
          
            @if (TempData["role"].ToString() == "1")
            {
                <tr>

                    <td>@item.Ordered_Date.ToShortDateString()</td>
                    <td>@item.Address</td>
                    <td>@item.status</td>
                    <td>
                         <a href="/Order/GetBooksFromOrder/@item.OrderId" class="  btn-sm btn-primary ms-2">View Details</a>
                    </td>
                        
                </tr>
                
            }
             
        }

    </tbody>
   
</table>

<script type="text/javascript">

    function delOrder(id) {
        let delItem = id.toString();
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Cancel it!",
            cancelButtonText: "No"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    datatype: "json",
                    contentType: "application/json;charset=UTF-8", 
                    url: "/Order/DeleteOrder?orderId="+ delItem,
                    success: function () {
                        setTimeout(myTimeout, 1000);
                        
                    },
                    error: function () {
                        Swal.fire({
                            text: "Error",
                            icon: "danger",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                })

            }
        })
    }
        function myTimeout() {
            location.reload();
        }

    function updateStatus(id,value) {
        let orderId=id;
        let statusId=parseInt(value);
        $.ajax({
            type: "POST",
            datatype: "json",
            contentType: "application/json;charset=UTF-8",
            url: "/Order/UpdateOrder?orderId=" + orderId + "&statusId=" + statusId,
            success: function (response) {
                setTimeout(myTimeout, 1000);
                console.log(response);                                                               
            },
            error: function () {
                alert("error")
            }
        })
    }

</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

       <script type="text/javascript">



        // var value = $('#selectedOpt').val();
        // if (value == "4" || value == "3") {
        //     $("#dropdown").prop("disabled", true);
        // }
        
       </script>


}