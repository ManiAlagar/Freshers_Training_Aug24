@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

@model BookstoreMVC.Models.CartRes
<h3>Cart</h3>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.items)
        {
            <tr>
                <td>@item.Title</td>
                <td>
                    <a id="increase" onclick="increase(@item.CartItemId,@item.Quantity);" class="bi bi-plus btn-sm " ></a>
                    <input type="text" id="quantity" class="btn btn-sm"  value="@item.Quantity" />
                    <a id="decrease" class="bi bi-dash btn-sm " onclick="decrease(@item.CartItemId,@item.Quantity);"></a>
                </td>
                <td>@item.Price</td>
                <td>
                        <a class="bi bi-trash btn-sm btn-danger" id="delCartItem" onclick="delCartItem(@item.CartItemId);"></a>
                </td>
            </tr>
        }
        <tr></tr>
    </tbody>
</table>


<div class="text-end m-3">
    <div>
        <label><b>Shipping :</b></label><span> @Html.DisplayFor(shipping => Model.discount.Shipping)</span>
    </div>
    <div>
        <label><b>Discount(in %) :</b></label><span>@Html.DisplayFor(discount => Model.discount.DiscountOfffer)</span>
    </div>
    <div>
        <label><b>Total Amount :</b></label><span> @Html.DisplayFor(amount => Model.discount.Amount)</span>
    </div>
    
</div>

<div class="text-center">
    <h3 class="m-3">Confirm your order here</h3>
    <label><b>Address :</b></label>
    <input type="text" id="address"/>
    <div class="m-3">
        <a class=" btn-sm btn-success" onclick="order()">Order now</a>
    </div>
</div>

<script type="text/javascript">   
    function order(){
        let Address=document.getElementById("address").value;
        $.ajax({
            type: "POST",
            datatype: "json",
            contentType: "application/json;charset=UTF-8",
            url: "/Order/AddOrder?Address=" + Address,
            success: function () {
                setTimeout(myTimeout, 1000);
                
            },
            error: function () {
                Swal.fire({
                    text: "Error",
                    icon: "danger",
                    showConfirmButton: false,
                    timer: 1500
                });
            }
        })
    }
    function increase(id,quantity){
         let inc=quantity+1;
         let cartItemId = id;
         $.ajax({
            type: "POST",
            data:{
                cartItemId:cartItemId,
                quantity:inc
            },
            datatype:'json',
            url: "/Cart/UpdateQuantity?cartItemId="+cartItemId+"&quantity="+inc,
            contentType: "application/json;charset=UTF-8",
            success:function(){
                setTimeout(myTimeout, 1000);
            }, error: function (error) {
                console.error();
                alert("error", error);
            }
        });

    }

    function decrease(id,quantity){
         let dec=quantity-1;
         let cartItemId = id;
         $.ajax({
            type: "POST",
            data:{
                cartItemId:cartItemId,
                quantity:dec
            },
            datatype:'json',
            url: "/Cart/UpdateQuantity?cartItemId="+cartItemId+"&quantity="+dec,

            contentType: "application/json;charset=UTF-8",
            success:function(){
                setTimeout(myTimeout, 1000);
            }, error: function (error) {
                console.error();
                alert("error", error);
            }
        });
    }

    function delCartItem(id) {
        let cartItem = id.toString();
        
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    datatype:"json",
                    contentType: "application/json;charset=UTF-8",
                    url: "/Cart/DeleteItemFromCart?cartItemId="+cartItem,
                    success: function () {
                        setTimeout(myTimeout, 1000);
                        
                    },
                    error: function () {
                        Swal.fire({
                            text: "Error",
                            icon: "danger",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                })

            }
        })
    }

    function myTimeout() {
        location.reload();
    } 

    function config() {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "/Config/GetAllConfigValues",
            contentType: "application/json;charset=UTF-8",
            success: function (response) {
                console.log(response);
            }, error: function (error) {
                alert("error", error); 
            }
        });
       
    }

    $(document).ready(function(){
    $.ajax({ url: "/Cart/Discount",
        context: document.body,
        success: function(){
           alert("done");
        }
    });
});
</script>
